/**
 * Animal class, contains main method
 * @author peaf1g17
 */

public abstract class Animal implements Comparable<Animal> {
	private String name;
	private int age;
	
	//getters and setters
	public String getName() {
		return name;
	}
	public void setName(String name) {
		this.name = name;
	}
	public int getAge() {
		return age;
	}
	public void setAge(int age) {
		this.age = age;
	}
		
	public Animal(String name, int age) {
		this.name = name;
		this.age = age;
	}
	
	public Animal() {
		//This calls the constructor in the current class
		this("Newborn", 0);
	}
	
	/**
	 * makes the specific animal noise
	 */
	public abstract void makeNoise();
	
	/**
	 * makes animal eat a food
	 * @param food
	 * @throws Exception
	 */
	public abstract void eat(Food food) throws Exception;
	
	/**
	 * overloading eat
	 * @param food
	 * @param number
	 * @throws Exception
	 */
	public void eat(Food food, int number) throws Exception {
		for (int i = 0; i < number; i++) {
			this.eat(food);
		}
	}
	
	/**
	 * A method to compare the age of the current animal and one passed in
	 * @param animal
	 */
	@Override
	public int compareTo(Animal animal) {
		if (this.getAge() < animal.getAge()) {
			// the current object is less than given object 
			return -1;
		} else if (this.getAge() > animal.getAge()) {
			//current object is greater than the given object 
			return 1;
		} else {
			//objects are the same
			return 0;
		}
	}

	
}
